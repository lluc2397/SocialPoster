# Generated by Django 4.0.1 on 2022-01-21 17:23

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('modelos', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='YOUTUBE_CHANNELS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(default='')),
                ('url', models.TextField(default='')),
                ('all_parsed', models.BooleanField(default=False)),
                ('keep_scraping', models.BooleanField(default=False)),
                ('last_time_parsed', models.DateTimeField(default=datetime.datetime(2022, 1, 21, 17, 23, 34, 847630))),
            ],
        ),
        migrations.RemoveField(
            model_name='facebook_post',
            name='post_related',
        ),
        migrations.RemoveField(
            model_name='instagram_post',
            name='post_related',
        ),
        migrations.RemoveField(
            model_name='twitter_post',
            name='post_related',
        ),
        migrations.RemoveField(
            model_name='youtube_post',
            name='post_related',
        ),
        migrations.AddField(
            model_name='facebook_post',
            name='caption',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='facebook_post',
            name='content_related',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelos.local_content'),
        ),
        migrations.AddField(
            model_name='facebook_post',
            name='date_posted',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='facebook_post',
            name='emojis',
            field=models.ManyToManyField(blank=True, to='modelos.EMOJIS'),
        ),
        migrations.AddField(
            model_name='facebook_post',
            name='hashtags',
            field=models.ManyToManyField(blank=True, to='modelos.HASHTAGS'),
        ),
        migrations.AddField(
            model_name='facebook_post',
            name='is_local',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='facebook_post',
            name='is_original',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='facebook_post',
            name='post_type',
            field=models.IntegerField(blank=True, choices=[(1, 'Video'), (2, 'Image'), (3, 'Text'), (4, 'Repost'), (5, 'Text and video'), (6, 'Text and image')], null=True),
        ),
        migrations.AddField(
            model_name='facebook_post',
            name='title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelos.default_titles'),
        ),
        migrations.AddField(
            model_name='hashtags',
            name='for_yb',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='instagram_post',
            name='caption',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='instagram_post',
            name='content_related',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelos.local_content'),
        ),
        migrations.AddField(
            model_name='instagram_post',
            name='date_posted',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='instagram_post',
            name='emojis',
            field=models.ManyToManyField(blank=True, to='modelos.EMOJIS'),
        ),
        migrations.AddField(
            model_name='instagram_post',
            name='hashtags',
            field=models.ManyToManyField(blank=True, to='modelos.HASHTAGS'),
        ),
        migrations.AddField(
            model_name='instagram_post',
            name='is_local',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='instagram_post',
            name='is_original',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='instagram_post',
            name='post_type',
            field=models.IntegerField(blank=True, choices=[(1, 'Video'), (2, 'Image')], null=True),
        ),
        migrations.AddField(
            model_name='instagram_post',
            name='title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelos.default_titles'),
        ),
        migrations.AddField(
            model_name='twitter_post',
            name='caption',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='twitter_post',
            name='content_related',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelos.local_content'),
        ),
        migrations.AddField(
            model_name='twitter_post',
            name='date_posted',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='twitter_post',
            name='emojis',
            field=models.ManyToManyField(blank=True, to='modelos.EMOJIS'),
        ),
        migrations.AddField(
            model_name='twitter_post',
            name='hashtags',
            field=models.ManyToManyField(blank=True, to='modelos.HASHTAGS'),
        ),
        migrations.AddField(
            model_name='twitter_post',
            name='is_local',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='twitter_post',
            name='is_original',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='twitter_post',
            name='post_type',
            field=models.IntegerField(blank=True, choices=[(1, 'Video'), (2, 'Image'), (3, 'Text'), (4, 'Repost'), (5, 'Text and video'), (6, 'Text and image')], null=True),
        ),
        migrations.AddField(
            model_name='youtube_post',
            name='caption',
            field=models.TextField(default='\n\nPrueba las herramientas que todo inversor inteligente necesita: https://inversionesyfinanzas.xyz\n\nVisita nuestras redes sociales:\nFacebook: https://www.facebook.com/Inversiones.y.Finanzas.Para.Todos\nInstagram: https://www.instagram.com/inversiones.finanzas/\nTikTok: https://www.tiktok.com/@inversionesyfinanzas?\nTwitter : https://twitter.com/InvFinz\nLinkedIn : https://www.linkedin.com/company/inversiones-finanzas\n\nEn este canal de INVERSIONES & FINANZAS, aprende c√≥mo realizar un BUEN AN√ÅLISIS de las EMPRESAS. Descubre d√≥nde invertir y de qu√© forma ENCONTRAR BUENAS OPORTUNIDADES de INVERSI√ìN.\n\nAPRENDE como invertir en la bolsa de valores.ü•á DESCUBRE las mejores ESTRATEGIAS que existen para INVERTIR y los pasos que deber√≠as seguir para INVERTIR en la BOLSA mexicana de VALORES. ¬øQuieres CONOCER la forma de INVERTIR de los INVERSORES m√°s c√©lebres de forma clara y F√ÅCIL? AD√âNTRATE en el ASOMBROSO mundo de las INVERSIONES. Si lo  que buscas es aprender a : \ninvertir en la bolsa de valores\ninvertir sin dinero\ninvertir con poco dinero\ninvertir siendo joven\nmultiplicar tu dinero\nanalizar una empresa\n'),
        ),
        migrations.AddField(
            model_name='youtube_post',
            name='content_related',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelos.local_content'),
        ),
        migrations.AddField(
            model_name='youtube_post',
            name='date_posted',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.AddField(
            model_name='youtube_post',
            name='emojis',
            field=models.ManyToManyField(blank=True, to='modelos.EMOJIS'),
        ),
        migrations.AddField(
            model_name='youtube_post',
            name='hashtags',
            field=models.ManyToManyField(blank=True, to='modelos.HASHTAGS'),
        ),
        migrations.AddField(
            model_name='youtube_post',
            name='is_local',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='youtube_post',
            name='is_original',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='youtube_post',
            name='post_type',
            field=models.IntegerField(blank=True, choices=[(1, 'Video'), (2, 'Short')], null=True),
        ),
        migrations.AddField(
            model_name='youtube_post',
            name='title',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelos.default_titles'),
        ),
        migrations.AlterField(
            model_name='youtube_video_downloaded',
            name='download_date',
            field=models.DateTimeField(auto_now_add=True, null=True),
        ),
        migrations.DeleteModel(
            name='POST',
        ),
        migrations.AlterField(
            model_name='youtube_video_downloaded',
            name='original_channel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='modelos.youtube_channels'),
        ),
    ]
